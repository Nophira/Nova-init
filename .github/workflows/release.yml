name: Create GitHub Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # fÃ¼r vollstÃ¤ndiges Git-History

      - name: Get release info
        id: release_vars
        run: |
          TAG_NAME=$(git describe --tags --exact-match)
          echo "tag_name=$TAG_NAME" >> "$GITHUB_OUTPUT"

          # Wer hat den Commit gepusht / getaggt
          COMMITTER=$(git log -1 --pretty=format:'%cn <%ce>')
          echo "committer=$COMMITTER" >> "$GITHUB_OUTPUT"

          # Changelog: alle Commits seit letztem Tag
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^)
          CHANGELOG=$(git log $LAST_TAG..$TAG_NAME --pretty=format:'- %s (%an)')
          echo "changelog<<EOF" >> "$GITHUB_OUTPUT"
          echo "$CHANGELOG" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.release_vars.outputs.tag_name }}
          name: Release ${{ steps.release_vars.outputs.tag_name }}
          body: |
            **Release:** ${{ steps.release_vars.outputs.tag_name }}
            **Committer:** ${{ steps.release_vars.outputs.committer }}
            **Changelog:**
            ${{ steps.release_vars.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify Discord
        run: |
          curl -H "Content-Type: application/json" \
               -d "{\"content\": \"ðŸš€ New release: **${{ steps.release_vars.outputs.tag_name }}** by ${{ steps.release_vars.outputs.committer }}\n**Changelog:**\n${{ steps.release_vars.outputs.changelog }}\n[Release Link](${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ steps.release_vars.outputs.tag_name }})\"}" \
               ${{ secrets.DISCORD_WEBHOOK }}
