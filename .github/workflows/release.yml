name: Release and Publish (OIDC)

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    if: startsWith(github.event.head_commit.message, 'chore(release):')

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version
        id: version
        run: |
          VERSION=$(echo "${{ github.event.head_commit.message }}" | sed -E 's/^chore\(release\): //')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create and push tag
        if: steps.version.outputs.version != ''
        run: |
          git config --local user.email "nophira.it@gmail.com"
          git config --local user.name "Nophira-admin"
          TAG="v${{ steps.version.outputs.version }}"
          if ! git rev-parse "$TAG" >/dev/null 2>&1; then
            git tag -a "$TAG" -m "Release $TAG"
            git push origin "$TAG"
          fi

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
          always-auth: true

      - uses: pnpm/action-setup@v4

      - run: pnpm install --frozen-lockfile

      - run: cd apps/nova-init && pnpm run build

      - name: Create GitHub Release
        if: steps.version.outputs.version != ''
        run: |
          TAG="v${{ steps.version.outputs.version }}"
          if ! gh release view "$TAG" >/dev/null 2>&1; then
            pnpm dlx changelogithub
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to npm (OIDC)
        if: steps.version.outputs.version != ''
        run: |
             cd apps/nova-init
             pnpm publish --provenance --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
