name: Publish NPM package

on:
  push:
    branches:
      - main
    tags:
      - 'v*' # falls du direkt Tags pushst

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Checkout (inkl. Tags)
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2️⃣ Node.js Setup
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      # 3️⃣ Dependencies
      - name: Install dependencies
        run: npm install

      # 4️⃣ Determine Tag
      - name: Determine tag
        id: vars
        run: |
          # Prüfen, ob GITHUB_REF ein Tag ist
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            TAG_NAME=${GITHUB_REF#refs/tags/}
          else
            # Falls Commit auf main, der einen Tag enthält, den letzten Tag verwenden
            TAG_NAME=$(git describe --tags --exact-match || echo "")
          fi

          if [ -z "$TAG_NAME" ]; then
            echo "No tag found for this commit. Skipping publish."
            exit 0
          fi

          echo "Using tag: $TAG_NAME"
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

      # 5️⃣ Build & Publish
      - name: Build and Publish
        run: |
          cd apps/nova-init
          npm install
          npm run build
          npm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # 6️⃣ Create GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.vars.outputs.tag_name }}
          name: Release ${{ steps.vars.outputs.tag_name }}
          body: "Automatisches Release für Version ${{ steps.vars.outputs.tag_name }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
